# WARNING: This workflow *must* be amended to work - see comment on line 13
name: "CodeQL monorepo"

on:
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "39 18 * * 6"

jobs:
  changes:
    env:
      # TODO: fill in these paths with the real directories that these variables refer to in a build-projects.xml file
      # use / for paths, not \, since we process everything in a Unix-like environment, not Windows (we don't need it, and it costs more)
      # use relative paths without the ./ prefix
      variables: |
        FolderADir: src/FolderA
        FolderBDir: src/FolderB
        FolderCDir: src/FolderC
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      projects: ${{ steps.build-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # TODO: ship with pinned versions of xml2js and yaml?
      - name: Install npm dependencies
        run: npm install xml2js yaml

      # Either use this step to read the projects from a JSON file, `.github/projects.json`,
      # or use the next step to read them from an XML file.
      # The JSON file should look like this, defining the projects and their paths, for each language to be scanned:
      # { "csharp" : [ "Project1" : [ "src/FolderA", "src/FolderB" ], "Project2" : [ "src/FolderC" ] ] }
      # If the JSON read step fails, we fall through to trying to read an MSBuild compatible XML file
      - name: Read projects JSON
        uses: actions/github-script@v7
        id: read-projects
        with:
          script: |
            const fs = require('fs')
            const projects = fs.readFileSync('.github/projects.json', 'utf8')
            return projects

      - name: Process projects XML into JSON
        if: failure()
        uses: actions/github-script@v7
        id: build-projects
        env:
          # TODO: use the real name of the XML file that defines the projects to build
          filename: build-projects.xml
        with:
          result-encoding: string
          script: |
            const script = require('.github/scripts/build-projects-from-xml.js')
            return script(github, context, core)

      - name: Build filters
        uses: actions/github-script@v7
        id: build-filters
        env: 
          projects: ${{ steps.build-projects.outputs.projects }}
        with:
          result-encoding: string
          script: |
            const script = require('.github/scripts/build-filters.js')
            return script(github, context, core)

      - name: Filter projects by changes in the PR
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: filter
        with:
          filters: ${{ steps.build-filters.outputs.result }}

      - name: Build matrix
        uses: actions/github-script@v7
        id: build-matrix
        env:
          filters: ${{ toJson(steps.filter.outputs) }}
          projects: ${{ steps.build-projects.outputs.projects }}
        with:
          script: |
            const script = require('.github/scripts/build-matrix.js')
            return script(github, context, core)

      - name: Debug matrix
        env:
          result: ${{ toJson(steps.build-matrix.outputs) }}
        run: echo "${result}"

  analyze:
    name: Analyze
    needs: changes
    if: ${{ fromJson(needs.changes.outputs.projects).length > 0 }}
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.changes.outputs.projects).projects }}
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ matrix.project.sparse_checkout }}

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ join(matrix.project.languages, ',') }}
          build-mode: none
          # The "paths"/"paths-ignore" fields of the config only have effect for TypeScript/JavaScript, Python, and Ruby, and when using 'build-mode: none' for Java and C#
          config: ${{ matrix.project.codeql_config }}

          # If you wish to specify custom queries, you can do so here or in a config file.
          # config-file: ${{ matrix.project.path }}/.github/codeql-config.yml

          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
      # If this step fails, then you should remove it and run the build manually (see below)
      # - name: Autobuild
      #  uses: github/codeql-action/autobuild@v3

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #     echo "Run, Build Application using script"
      #     ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:$(matrix.project.language);project:$(matrix.project.name)"

  republish-sarif:
    name: Republish SARIF scans for languages not scanned in this PR
    runs-on: ubuntu-latest
    needs: changes
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout script
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github/scripts/republish-sarif.js
      - uses: actions/github-script@v7
        env:
          languages: ${{ toJson(fromJson(needs.changes.outputs.projects).languages) }}
        with:
          script: |
            const script = require('.github/scripts/republish-sarif.js')
            script(github, context, core)
      - uses: github/codeql-action/upload-sarif@v3
        if: ${{ hashFiles('sarif/*.sarif') != '' }}
        with:
          sarif_file: sarif
